## Use this in production to increase performance and decrease loads from back-end servers.
#proxy_cache_path cache/letsgetbread.mooo.com/  keys_zone=api_cache:10m;

## API load balancer, only have one instance of the API for now.
upstream lb_bread_api {
    server 127.0.0.1:5000;
}

## Main server
server {
    server_name letsgetbread.mooo.com;
    root    /usr/local/var/www/letsgetbread.mooo.com;
    index   index.html index.htm;
    access_log  /usr/local/var/log/nginx/letsgetbread.mooo.com.access.log;
    error_log   /usr/local/var/log/nginx/letsgetbread.mooo.com.error.log;

    ## Default error page when nginx experiences particular error codes: 404, 500, 502, 503 and 504
    error_page  404              /usr/local/var/www/letsgetbread.mooo.com/assets/pages/err_404.html;
    error_page  500 502 503 504  /usr/local/var/www/letsgetbread.mooo.com/assets/pages/err_50x.html;

    proxy_set_header  X-Real-IP  $remote_addr;
    ## Use this in production to increase performance and decrease loads from back-end servers.
    # proxy_cache api_cache;
    # proxy_cache_valid 200 10m;

    ## Location of static files to be served from nginx, set expiration period in production not in dev
    ## to avoid weird behavior.
    location ~* ^/(assets|image|_include|style|lib|js|css|flash|media|static|.html$|.ttf$|.woff$|.ico$|.jpg$|.png$|.gif$)  {
        root    /usr/local/var/www/letsgetbread.mooo.com;
        access_log   off;
        expires 7d;
    }

    ## Setting for react.
    location / {
        try_files $uri /index.html =404;
    }

    ## Proxy setting for the backend API (such ask flask).
    location /api/ {
        proxy_pass http://lb_bread_api/;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/letsgetbread.mooo.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/letsgetbread.mooo.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = letsgetbread.mooo.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen  80;
    server_name letsgetbread.mooo.com;
    return 404; # managed by Certbot


}
